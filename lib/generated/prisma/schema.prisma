generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tb_administradores {
  id              Int             @id @default(autoincrement())
  organizacao_id  Int
  nome            String
  email           String          @unique
  senha_hash      String
  cargo           String?         @db.VarChar(50)
  ativo           String?         @default("S") @db.Char(1)
  data_cadastro   DateTime?       @default(now()) @db.Timestamptz(6)
  tb_organizacoes tb_organizacoes @relation(fields: [organizacao_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_admin_org")
}

model tb_conversation_contexts {
  whatsapp_id  String    @id @db.VarChar(50)
  context      Json?
  last_updated DateTime? @default(now()) @db.Timestamptz(6)
}

model tb_intencoes {
  id                      Int                       @id @default(autoincrement())
  nome_intencao           String                    @unique @db.VarChar(100)
  descricao               String?
  tb_interacoes_intencoes tb_interacoes_intencoes[]
}

model tb_interacoes {
  id                      Int                       @id @default(autoincrement())
  agricultor_id           Int
  mensagem_usuario        String?
  resposta_chatbot        String?
  entidades               Json?
  timestamp               DateTime?                 @default(now()) @db.Timestamptz(6)
  tb_usuarios             tb_usuarios               @relation(fields: [agricultor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_interacao_agricultor")
  tb_interacoes_intencoes tb_interacoes_intencoes[]
}

model tb_interacoes_intencoes {
  interacao_id  Int
  intencao_id   Int
  tb_intencoes  tb_intencoes  @relation(fields: [intencao_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_intencao")
  tb_interacoes tb_interacoes @relation(fields: [interacao_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_interacao")

  @@id([interacao_id, intencao_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tb_movimentacoes_estoque {
  id                  Int                 @id @default(autoincrement())
  produto_id          Int
  tipo_movimentacao   String              @db.VarChar(10)
  quantidade          Decimal             @db.Decimal(10, 2)
  data_movimentacao   DateTime?           @default(now()) @db.Timestamptz(6)
  observacao          String?
  tb_produtos_estoque tb_produtos_estoque @relation(fields: [produto_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_movimentacao_produto")
}

model tb_organizacoes {
  id                 Int                  @id @default(autoincrement())
  nome               String               @unique
  cnpj               String?              @unique @db.VarChar(18)
  data_criacao       DateTime?            @default(now()) @db.Timestamptz(6)
  tb_administradores tb_administradores[]
  tb_usuarios        tb_usuarios[]
}

model tb_produtos_estoque {
  id                       Int                        @id @default(autoincrement())
  agricultor_id            Int
  nome_produto             String
  tipo_produto             String                     @db.VarChar(50)
  unidade_medida           String                     @db.VarChar(20)
  saldo_atual              Decimal                    @db.Decimal(10, 2)
  tb_movimentacoes_estoque tb_movimentacoes_estoque[]
  tb_usuarios              tb_usuarios                @relation(fields: [agricultor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_produto_agricultor")
}

model tb_safras {
  id               Int         @id @default(autoincrement())
  agricultor_id    Int
  cultura          String
  ano_safra        String?     @db.VarChar(10)
  area_plantada_ha Decimal?    @db.Decimal(10, 2)
  produtividade    Decimal?    @db.Decimal(10, 2)
  unidade_medida   String?     @db.VarChar(20)
  tb_usuarios      tb_usuarios @relation(fields: [agricultor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_safra_agricultor")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tb_usuarios {
  id                  Int                   @id @default(autoincrement())
  organizacao_id      Int
  nome                String
  whatsapp_id         String                @unique @db.VarChar(50)
  latitude            Decimal?              @db.Decimal(10, 8)
  longitude           Decimal?              @db.Decimal(11, 8)
  cidade              String?               @db.VarChar(100)
  estado              String?               @db.VarChar(2)
  data_cadastro       DateTime?             @default(now()) @db.Timestamptz(6)
  ultima_atividade    DateTime?             @db.Timestamptz(6)
  ativo               String?               @default("S") @db.Char(1)
  tb_interacoes       tb_interacoes[]
  tb_produtos_estoque tb_produtos_estoque[]
  tb_safras           tb_safras[]
  tb_organizacoes     tb_organizacoes       @relation(fields: [organizacao_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_usuario_org")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tb_versoes_schema {
  id               Int       @id @default(autoincrement())
  data_hora        DateTime? @default(now()) @db.Timestamptz(6)
  usuario          String    @db.VarChar(100)
  tipo_operacao    String    @db.VarChar(20)
  tabelas_afetadas String
  descricao        String?
}
