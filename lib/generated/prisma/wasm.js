
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Tb_administradoresScalarFieldEnum = {
  id: 'id',
  organizacao_id: 'organizacao_id',
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash',
  cargo: 'cargo',
  ativo: 'ativo',
  data_cadastro: 'data_cadastro'
};

exports.Prisma.Tb_conversation_contextsScalarFieldEnum = {
  whatsapp_id: 'whatsapp_id',
  context: 'context',
  last_updated: 'last_updated'
};

exports.Prisma.Tb_intencoesScalarFieldEnum = {
  id: 'id',
  nome_intencao: 'nome_intencao',
  descricao: 'descricao'
};

exports.Prisma.Tb_interacoesScalarFieldEnum = {
  id: 'id',
  agricultor_id: 'agricultor_id',
  mensagem_usuario: 'mensagem_usuario',
  resposta_chatbot: 'resposta_chatbot',
  entidades: 'entidades',
  timestamp: 'timestamp'
};

exports.Prisma.Tb_interacoes_intencoesScalarFieldEnum = {
  interacao_id: 'interacao_id',
  intencao_id: 'intencao_id'
};

exports.Prisma.Tb_movimentacoes_estoqueScalarFieldEnum = {
  id: 'id',
  produto_id: 'produto_id',
  tipo_movimentacao: 'tipo_movimentacao',
  quantidade: 'quantidade',
  data_movimentacao: 'data_movimentacao',
  observacao: 'observacao'
};

exports.Prisma.Tb_organizacoesScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cnpj: 'cnpj',
  data_criacao: 'data_criacao'
};

exports.Prisma.Tb_produtos_estoqueScalarFieldEnum = {
  id: 'id',
  agricultor_id: 'agricultor_id',
  nome_produto: 'nome_produto',
  tipo_produto: 'tipo_produto',
  unidade_medida: 'unidade_medida',
  saldo_atual: 'saldo_atual'
};

exports.Prisma.Tb_safrasScalarFieldEnum = {
  id: 'id',
  agricultor_id: 'agricultor_id',
  cultura: 'cultura',
  ano_safra: 'ano_safra',
  area_plantada_ha: 'area_plantada_ha',
  produtividade: 'produtividade',
  unidade_medida: 'unidade_medida'
};

exports.Prisma.Tb_usuariosScalarFieldEnum = {
  id: 'id',
  organizacao_id: 'organizacao_id',
  nome: 'nome',
  whatsapp_id: 'whatsapp_id',
  latitude: 'latitude',
  longitude: 'longitude',
  cidade: 'cidade',
  estado: 'estado',
  data_cadastro: 'data_cadastro',
  ultima_atividade: 'ultima_atividade',
  ativo: 'ativo'
};

exports.Prisma.Tb_versoes_schemaScalarFieldEnum = {
  id: 'id',
  data_hora: 'data_hora',
  usuario: 'usuario',
  tipo_operacao: 'tipo_operacao',
  tabelas_afetadas: 'tabelas_afetadas',
  descricao: 'descricao'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  tb_administradores: 'tb_administradores',
  tb_conversation_contexts: 'tb_conversation_contexts',
  tb_intencoes: 'tb_intencoes',
  tb_interacoes: 'tb_interacoes',
  tb_interacoes_intencoes: 'tb_interacoes_intencoes',
  tb_movimentacoes_estoque: 'tb_movimentacoes_estoque',
  tb_organizacoes: 'tb_organizacoes',
  tb_produtos_estoque: 'tb_produtos_estoque',
  tb_safras: 'tb_safras',
  tb_usuarios: 'tb_usuarios',
  tb_versoes_schema: 'tb_versoes_schema'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
